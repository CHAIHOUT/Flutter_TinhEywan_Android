plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Load keystore properties (This should be defined in keystore.properties or gradle.properties)
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.ecommerce"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }

    kotlinOptions {
        jvmTarget = '18'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.ecommerce"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true // Enable multidex if needed
    }

    // LINK KEYSTORE TO FOR PROD
    signingConfigs {
        release {
            keyAlias 'my-key-alias'
            keyPassword '@chaihout123'
            storeFile file('E:/Tinh_Eywan/HOST/my-release-key.jks')
            storePassword '@chaihout123'
        }
    }
    buildTypes {
        // release {
        //     // TODO: Add your own signing config for the release build.
        //     // Signing with the debug keys for now, so `flutter run --release` works.
        //     signingConfig signingConfigs.debug 
        // }
        // LINK KEYSTORE TO FOR PROD
        release {
            signingConfig signingConfigs.release
            minifyEnabled true // Enables code shrinking for smaller APKs
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // implementation platform("com.google.firebase:firebase-bom:33.4.0")

    // // Example Firebase SDK dependencies
    // implementation 'com.google.firebase:firebase-analytics'
    // implementation 'com.google.firebase:firebase-storage' 

    implementation 'androidx.multidex:multidex:2.0.1' // Add multidex dependency if enabled
    // Google Maps dependency
    implementation 'com.google.android.gms:play-services-maps:18.0.0'
}

// Apply Google Services plugin
apply plugin: 'com.google.gms.google-services'